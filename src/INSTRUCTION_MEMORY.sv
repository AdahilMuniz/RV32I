//@TODO: Fix it
module INSTRUCTION_MEMORY(
`ifndef YOSYS
    output data_t o_Instruction,
    input  data_t i_Addr
`else 
    output logic [`WORD_SIZE -1:0] o_Instruction,
    input  logic [`WORD_SIZE -1:0] i_Addr
`endif
    );

    parameter HEIGHT = `IM_DEPTH;//Memory height
    parameter FILE = `IM_FILE;

`ifndef YOSYS
    data_t mem [HEIGHT-1:0];//Memory: Word: 4byte
`else 
    logic [`WORD_SIZE -1:0] mem [HEIGHT-1:0];//Memory: Word: 4byte
`endif

    /*
        The instruction memory is initialized with the hexadecimal code generated by the assembler.
    It's used one C code (Mount.c) to generate this initilization.
    */
    initial begin
        $readmemh(FILE, mem);//Initialize Memory
    end
    
    //assign o_Instruction = {mem[i_Addr], mem[(i_Addr)+1], mem[(i_Addr)+2], mem[(i_Addr)+3]};//One instruction has 32 bits
    assign o_Instruction = mem[(i_Addr>>2)];//One instruction has 32 bits


endmodule
